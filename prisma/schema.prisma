generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Category {
  id            String            @id @default(cuid())
  title         String
  slug          String            @unique
  parentId      String?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  description   String?
  image         String?
  lastSyncedAt  DateTime?
  shopifyHandle String?           @db.VarChar(191)
  shopifyPageId String?           @db.VarChar(191)
  parent        Category?         @relation("ParentChild", fields: [parentId], references: [id])
  children      Category[]        @relation("ParentChild")
  products      ProductCategory[]

  @@index([shopifyHandle])
  @@index([shopifyPageId])
}

model ProductCategory {
  id         String   @id @default(cuid())
  productGid String
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  @@unique([productGid, categoryId])
}

model ProductFitment {
  id         String   @id @default(cuid())
  productGid String
  yearFrom   Int?
  yearTo     Int?
  make       String
  model      String
  trim       String?
  chassis    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([productGid, make, model, yearFrom, yearTo, trim, chassis])
  @@index([productGid])
  @@index([make, model])
  @@index([yearFrom, yearTo])
}

model FitTerm {
  id        String      @id @default(cuid())
  type      FitTermType
  name      String
  parentId  String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  parent    FitTerm?    @relation("FitTermParentChild", fields: [parentId], references: [id])
  children  FitTerm[]   @relation("FitTermParentChild")

  @@unique([type, name, parentId])
  @@index([type])
  @@index([parentId])
}

enum FitTermType {
  MAKE
  MODEL
  TRIM
  CHASSIS
}
